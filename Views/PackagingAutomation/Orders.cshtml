@model IEnumerable<PackagingAutomation.Models.Entities.Order>

@{
    ViewData["Title"] = "Orders";
}

<h1>@Html.DisplayNameFor(model => model.Index)</h1>

<p><a asp-action="Schedules" class="btn btn-primary">Распределить заказы</a></p>

<button id="moveUp" class="btn btn-primary" disabled>Вверх</button>
<button id="moveDown" class="btn btn-primary" disabled>Вниз</button>

<table class="table" id="ordersTable">
    <thead>
        <tr>
            <th>№</th>
            <th>@Html.DisplayNameFor(model => model.Distributor)</th>
            <th>@Html.DisplayNameFor(model => model.Product)</th>
            <th>@Html.DisplayNameFor(model => model.Quantity)</th>
            <th>@Html.DisplayNameFor(model => model.Deadline)</th>
        </tr>
    </thead>
    <tbody>
        @{int i = 1;}
        @foreach (var item in Model)
        {
            <tr class="cursor-pointer" data-id="@item.Id">
                <td class ="status-cell">@i</td>
                <td>@Html.DisplayFor(modelItem => item.Distributor.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Product.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                <td>@Html.DisplayFor(modelItem => item.Deadline)</td>
            </tr>
            i++;
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let selectedRow = null;

        $(document).ready(function () {
            $("#ordersTable tbody tr").click(function () {
                event.stopPropagation();

                if (selectedRow) {
                    selectedRow.removeClass("table-active");
                }
                selectedRow = $(this);
                selectedRow.addClass("table-active");

                $("#moveUp, #moveDown").prop("disabled", false);
            });

            $(document).click(function () {
                if (selectedRow) {
                    selectedRow.removeClass("table-active");
                    selectedRow = null;
                }
                $("#moveUp, #moveDown").prop("disabled", true);
            });

            $("#moveUp").click(function () {
                event.stopPropagation();
                if (!selectedRow) return;

                let prevRow = selectedRow.prev();
                if (prevRow.length === 0) return;

                swapOrders(selectedRow, prevRow);
            });

            $("#moveDown").click(function () {
                event.stopPropagation();
                if (!selectedRow) return;

                let nextRow = selectedRow.next();
                if (nextRow.length === 0) return;

                swapOrders(nextRow, selectedRow);
            });

            function swapOrders(row1, row2) {
                let id1 = row1.data("id");
                let id2 = row2.data("id");

                $.ajax({
                    url: "@Url.Action("SwapPriority", "PackagingAutomation")",
                    type: "POST",
                    data: { id1: id1, id2: id2 },
                    success: function () {
                        var text1 = row1.find(".status-cell").text();
                        var text2 = row2.find(".status-cell").text();

                        row1.find(".status-cell").text(text2);
                        row2.find(".status-cell").text(text1);

                        row2.before(row1);
                    },
                    error: function () {
                        alert("Error");
                    }
                });
            }
        });
    </script>
}